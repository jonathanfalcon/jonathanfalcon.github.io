---
import type { ComponentProps } from 'astro/types'
import type { HashOptions } from '@/types/utils/hash/hash'

import { getHashDataUrl } from './hash'
import { resolveImageMetadata } from './resolveImageMetadata'
import { Picture } from 'astro:assets'

type Props = {
    hashOptions: Omit<HashOptions, 'src'>
} & ComponentProps<typeof Picture>

const {
    src: rawSrc,
    hashOptions,
    widths = [900, 1400, 2000],
    decoding = 'async',
    formats = ['avif'],
    fallbackFormat = 'webp',
    ...props
} = Astro.props

const image = typeof baseSrc === 'string' ? await getImage(baseSrc) : baseSrc

const base64DataUrl = await getHashDataUrl({
    src: image.src,
    ...hashOptions,
})

const style = `background: center / cover url(${base64DataUrl});`
---

<Picture
    src={image}
    widths={widths}
    decoding={decoding}
    formats={formats}
    fallbackFormat={fallbackFormat}
    style={style}
    {...props}
/>
