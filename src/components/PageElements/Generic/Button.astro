---
import type { HTMLTag, Polymorphic } from 'astro/types'
import { cva, type VariantProps } from 'cva'
import { cn } from '@/utils/cn'

const buttonStyles = cva({
    base: [
        'rounded-full',
        'flex items-center',
        'transition-[color,background,border,outline] duration-200',
    ],
    variants: {
        color: {
            emerald: 'null',
            green: null,
            red: null,
            blue: null,
            indigo: null,
            slate: null,
        },
        outline: {
            true: 'border-2',
            false: null,
        },
        size: {
            sm: 'text-sm px-3 py-1.5',
            md: 'text-base px-5 py-2.5',
            lg: 'sm:text-lg px-6 py-3',
            xl: 'sm:text-xl text-lg px-7 py-3.5',
            '2xl': 'text-2xl px-8 py-4',
        },
        scheme: {
            light: null,
            dark: null,
            auto: null,
        },
    },
    compoundVariants: [
        {
            color: 'emerald',
            outline: false,
            class: 'bg-emerald-700 text-emerald-50 hover:bg-emerald-900',
        },
        {
            color: 'emerald',
            outline: true,
            class: 'hover:text-emerald-50',
        },
        {
            color: 'emerald',
            outline: true,
            scheme: ['dark', 'auto'],
            class: 'text-emerald-600 border-emerald-600 hover:bg-emerald-600',
        },
        {
            color: 'emerald',
            outline: true,
            scheme: 'auto',
            class: 'dark:text-emerald-500 dark:border-emerald-500 dark:hover:bg-emerald-600 dark:hover:border-emerald-600 dark:hover:text-emerald-50',
        },
        {
            color: 'emerald',
            outline: true,
            scheme: 'light',
            class: 'text-emerald-500 border-emerald-500 hover:bg-emerald-600 hover:border-emerald-600',
        },
        {
            color: 'green',
            outline: false,
            class: 'bg-green-600 text-green-50 hover:bg-green-800',
        },
        {
            color: 'green',
            outline: true,
            class: 'hover:text-green-50',
        },
        {
            color: 'green',
            outline: true,
            scheme: ['dark', 'auto'],
            class: 'text-green-600 border-green-600 hover:bg-green-600',
        },
        {
            color: 'green',
            outline: true,
            scheme: 'auto',
            class: 'dark:text-green-500 dark:border-green-500 dark:hover:bg-green-600 dark:hover:border-green-600 dark:hover:text-green-50',
        },
        {
            color: 'green',
            outline: true,
            scheme: 'light',
            class: 'text-green-500 border-green-500 hover:bg-green-600 hover:border-green-600',
        },
        {
            color: 'red',
            outline: false,
            class: 'bg-red-600 text-red-50 hover:bg-red-800',
        },
        {
            color: 'red',
            outline: true,
            class: 'hover:text-red-50',
        },
        {
            color: 'red',
            outline: true,
            scheme: ['dark', 'auto'],
            class: 'text-red-600 border-red-600 hover:bg-red-600',
        },
        {
            color: 'red',
            outline: true,
            scheme: 'auto',
            class: 'dark:text-red-500 dark:border-red-500 dark:hover:bg-red-600 dark:hover:border-red-600 dark:hover:text-red-50',
        },
        {
            color: 'red',
            outline: true,
            scheme: 'light',
            class: 'border-red-500 hover:bg-red-600 hover:border-red-600',
        },
        {
            color: 'blue',
            outline: false,
            class: 'bg-blue-600 text-blue-50 hover:bg-blue-800',
        },
        {
            color: 'blue',
            outline: true,
            class: 'hover:text-blue-50',
        },
        {
            color: 'blue',
            outline: true,
            scheme: ['dark', 'auto'],
            class: 'text-blue-600 border-blue-600 hover:bg-blue-600',
        },
        {
            color: 'blue',
            outline: true,
            scheme: 'auto',
            class: 'dark:text-blue-500 dark:border-blue-500 dark:hover:bg-blue-500 dark:hover:text-blue-50',
        },
        {
            color: 'blue',
            outline: true,
            scheme: 'light',
            class: 'text-blue-500 border-blue-500 hover:bg-blue-500',
        },
        {
            color: 'indigo',
            outline: false,
            class: 'bg-indigo-600 text-indigo-50 hover:bg-indigo-800',
        },
        {
            color: 'indigo',
            outline: true,
            class: 'hover:text-indigo-50',
        },
        {
            color: 'indigo',
            outline: true,
            scheme: ['dark', 'auto'],
            class: 'text-indigo-600 border-indigo-600 hover:bg-indigo-600',
        },
        {
            color: 'indigo',
            outline: true,
            scheme: 'auto',
            class: 'dark:text-indigo-500 dark:border-indigo-500 dark:hover:bg-indigo-500 dark:hover:text-indigo-50',
        },
        {
            color: 'indigo',
            outline: true,
            scheme: 'light',
            class: 'text-indigo-500 border-indigo-500 hover:bg-indigo-500',
        },
        {
            color: 'slate',
            outline: false,
            scheme: ['auto', 'dark'],
            class: 'bg-slate-700 text-slate-50 hover:bg-slate-900',
        },
        {
            color: 'slate',
            outline: false,
            scheme: 'light',
            class: 'bg-slate-200 text-slate-950 hover:bg-slate-400',
        },
        {
            color: 'slate',
            outline: false,
            scheme: 'auto',
            class: 'dark:bg-slate-200 dark:text-slate-950 dark:hover:bg-slate-400',
        },
        {
            color: 'slate',
            outline: true,
            scheme: ['auto', 'dark'],
            class: 'text-slate-800 border-slate-800 hover:text-slate-50 hover:bg-slate-800',
        },
        {
            color: 'slate',
            outline: true,
            scheme: 'auto',
            class: 'dark:text-slate-200 dark:border-slate-200 dark:hover:bg-slate-200 dark:hover:text-slate-950',
        },
        {
            color: 'slate',
            outline: true,
            scheme: 'light',
            class: 'text-slate-200 border-slate-200 hover:bg-slate-200 hover:text-slate-950',
        },
    ],
    defaultVariants: {
        color: 'slate',
        outline: false,
        size: 'md',
        scheme: 'auto',
    },
})

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & VariantProps<typeof buttonStyles>

const { as: Tag, color, outline, scheme, size, class: className, ...attributes } = Astro.props
---

<Tag class={cn(buttonStyles({ color, outline, size, scheme, className }))} {...attributes}>
    <slot />
</Tag>
