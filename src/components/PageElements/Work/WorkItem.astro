---
import { Work } from '@/types/content/Work'
import BlurHashPicture from '@/utils/blurhash/BlurHashPicture.astro'
import blurHashImage from '@/utils/blurhash/blur'
import { Icon } from 'astro-icon/components'

type Props = {
    frontmatter: Work
    slug: string
    includeDetails?: boolean
    cardSize?: 'max-w-sm' | 'max-w-md' | 'max-w-lg'
    headingLevel: 'h2' | 'h3'
}

const {
    frontmatter,
    slug,
    includeDetails = true,
    cardSize = 'max-w-lg',
    headingLevel,
}: Props = Astro.props

const HeadingTag = headingLevel

function limitStringLength(inputString: string, maxLength: number): string {
    if (inputString.length <= maxLength) {
        return inputString
    }

    // Find the last space within the limit
    const lastSpaceIndex = inputString.lastIndexOf(' ', maxLength)

    // If there is no space, just truncate the string
    if (lastSpaceIndex === -1) {
        return inputString.slice(0, maxLength) + '...'
    }

    // Otherwise, truncate at the last space
    return inputString.slice(0, lastSpaceIndex) + '...'
}
---

<li
    class={`group relative flex ${cardSize} flex-col rounded-2xl transition-transform duration-300 focus-within:scale-105 hover:scale-105 bg-emerald-700 self-start
    after:absolute after:inset-0
    after:bg-slate-100/80 dark:after:bg-slate-900/80
    after:z-0 *:z-10
    after:rounded-2xl
    after:transition-[backdrop-filter] after:duration-300
    focus-within:after:backdrop-brightness-150 focus-within:after:backdrop-saturate-150
    hover:after:backdrop-brightness-150 hover:after:backdrop-saturate-150`}
    style={frontmatter.image?.src && (await blurHashImage(frontmatter.image.src))}
>
    {
        frontmatter.image?.src && (
            <BlurHashPicture
                src={frontmatter.image}
                alt={frontmatter.title}
                class='rounded-t-2xl'
            />
        )
    }

    <article class='flex h-full flex-col gap-y-2 p-5'>
        <HeadingTag class='font-heading text-2xl font-extrabold md:text-3xl'>
            <a class='after:absolute after:inset-0 focus:outline-none' href={`${slug}/`}
                >{frontmatter.title}</a
            >
        </HeadingTag>
        <p class='mb-4 opacity-90 md:text-lg'>{frontmatter.description}</p>
        {
            includeDetails && (
                <span class='mt-auto flex w-fit items-center px-3 py-1.5 text-sm font-medium opacity-70'>
                    <Icon name='ph:buildings-bold' class='mr-2 size-5' />
                    {frontmatter.location}
                </span>
            )
        }
    </article>
</li>
